TYPE
  LOGLEVEL : (CRITICAL, WARNING, INFO, DEBUG) := INFO;
END_TYPE

FUNCTION_BLOCK LOGGER
  VAR_INPUT
    TRIG : BOOL;
    MSG : STRING;
    LEVEL : LOGLEVEL := INFO;
  END_VAR
  VAR
    TRIG0 : BOOL;
  END_VAR

  IF TRIG AND NOT TRIG0 THEN
  {{
   LogMessage(GetFbVar(LEVEL),(char*)GetFbVar(MSG, .body),GetFbVar(MSG, .len));
  }}
  END_IF;
  TRIG0:=TRIG;
END_FUNCTION_BLOCK



FUNCTION_BLOCK python_eval
  VAR_INPUT
    TRIG : BOOL;
    CODE : STRING;
  END_VAR
  VAR_OUTPUT
    ACK : BOOL;
    RESULT : STRING;
  END_VAR
  VAR
    STATE : DWORD;
    BUFFER : STRING;
    PREBUFFER : STRING;
    TRIGM1 : BOOL;
    TRIGGED : BOOL;
  END_VAR

  {extern void __PythonEvalFB(int, PYTHON_EVAL*);__PythonEvalFB(0, data__);}
END_FUNCTION_BLOCK

FUNCTION_BLOCK python_poll
  VAR_INPUT
    TRIG : BOOL;
    CODE : STRING;
  END_VAR
  VAR_OUTPUT
    ACK : BOOL;
    RESULT : STRING;
  END_VAR
  VAR
    STATE : DWORD;
    BUFFER : STRING;
    PREBUFFER : STRING;
    TRIGM1 : BOOL;
    TRIGGED : BOOL;
  END_VAR

  {extern void __PythonEvalFB(int, PYTHON_EVAL*);__PythonEvalFB(1,(PYTHON_EVAL*)(void*)data__);}
END_FUNCTION_BLOCK

FUNCTION_BLOCK python_gear
  VAR_INPUT
    N : UINT;
    TRIG : BOOL;
    CODE : STRING;
  END_VAR
  VAR_OUTPUT
    ACK : BOOL;
    RESULT : STRING;
  END_VAR
  VAR
    py_eval : python_eval;
    COUNTER : UINT;
    ADD10_OUT : UINT;
    EQ13_OUT : BOOL;
    SEL15_OUT : UINT;
    AND7_OUT : BOOL;
  END_VAR

  ADD10_OUT := ADD(COUNTER, 1);
  EQ13_OUT := EQ(N, ADD10_OUT);
  SEL15_OUT := SEL(EQ13_OUT, ADD10_OUT, 0);
  COUNTER := SEL15_OUT;
  AND7_OUT := AND(EQ13_OUT, TRIG);
  py_eval(TRIG := AND7_OUT, CODE := CODE);
  ACK := py_eval.ACK;
  RESULT := py_eval.RESULT;
END_FUNCTION_BLOCK


PROGRAM Teste1
  VAR
    LIGA_PID : BOOL;
    AUTO_PID : BOOL;
  END_VAR
  VAR RETAIN
    SP : REAL;
  END_VAR
  VAR
    VP : REAL;
    SC : REAL;
  END_VAR
  VAR RETAIN
    KP : REAL;
    TI : REAL;
    TD : REAL;
  END_VAR
  VAR
    VP_RAW : UINT;
    SC_RAW : UINT;
  END_VAR
  VAR
    PID0 : PID;
    UINT_TO_REAL27_OUT : REAL;
    MUL20_OUT : REAL;
    DIV21_OUT : REAL;
    LIMIT33_OUT : REAL;
    MUL30_OUT : REAL;
    DIV31_OUT : REAL;
    REAL_TO_UINT26_OUT : UINT;
  END_VAR

  UINT_TO_REAL27_OUT := UINT_TO_REAL(VP_RAW);
  MUL20_OUT := MUL(UINT_TO_REAL27_OUT, 100.0);
  DIV21_OUT := DIV(MUL20_OUT, 65536.0);
  VP := DIV21_OUT;
  PID0(EN := LIGA_PID, AUTO := AUTO_PID, PV := VP, SP := SP, KP := KP, TR := TI, TD := TD, CYCLE := T#50ms);
  LIMIT33_OUT := LIMIT(0.0, PID0.XOUT, 100.0);
  SC := LIMIT33_OUT;
  MUL30_OUT := MUL(SC, 16384.0);
  DIV31_OUT := DIV(MUL30_OUT, 100.0);
  REAL_TO_UINT26_OUT := REAL_TO_UINT(DIV31_OUT);
  SC_RAW := REAL_TO_UINT26_OUT;
END_PROGRAM


CONFIGURATION Config0

  RESOURCE Res0 ON PLC
    TASK task0(INTERVAL := T#50ms,PRIORITY := 0);
    PROGRAM instance0 WITH task0 : Teste1;
  END_RESOURCE
END_CONFIGURATION
